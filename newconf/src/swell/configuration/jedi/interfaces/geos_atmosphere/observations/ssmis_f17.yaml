obs space:
  name: ssmis_f17
  obsdatain:
    engine:
      type: H5File
      obsfile: '{{cycle_dir}}/ssmis_f17.{{window_begin}}.nc4'
  obsdataout:
    engine:
      type: H5File
      obsfile: '{{cycle_dir}}/{{experiment_id}}.ssmis_f17.{{window_begin}}.nc4'
  simulated variables: [brightnessTemperature]
  channels: &ssmis_f17_channels 1-24
obs operator:
  name: CRTM
  Absorbers: [H2O,O3,CO2]
  obs options:
    Sensor_ID: &Sensor_ID ssmis_f17
    EndianType: little_endian
    CoefficientPath: '{{crtm_coeff_dir}}'
obs bias:
  input file: '{{cycle_dir}}/ssmis_f17.{{background_time}}.satbias.nc4'
  variational bc:
    predictors:
    - name: constant
    - name: cloud_liquid_water
      satellite: SSMIS
      ch19h: 12
      ch19v: 13
      ch22v: 14
      ch37h: 15
      ch37v: 16
      ch91v: 17
      ch91h: 18
    - name: cosine_of_latitude_times_orbit_node
    - name: sine_of_latitude
    - name: lapse_rate
      order: 2
      tlapse: &ssmis_f17_tlapse '{{cycle_dir}}/ssmis_f17.{{background_time}}.tlapse.txt'
    - name: lapse_rate
      tlapse: *ssmis_f17_tlapse
    - name: emissivity
    - name: scan_angle
      var_name: sensorScanPosition
      order: 4
    - name: scan_angle
      var_name: sensorScanPosition
      order: 3
    - name: scan_angle
      var_name: sensorScanPosition
      order: 2
    - name: scan_angle
      var_name: sensorScanPosition
obs filters:
#step1: Gross check (setuprad)
- filter: Background Check
  filter variables:
  - name: brightnessTemperature
    channels: *ssmis_f17_channels
  threshold: 1.5
  action:
    name: reject
#step1: Gross check(qcmod)
- filter: Background Check
  filter variables:
  - name: brightnessTemperature
    channels: *ssmis_f17_channels
  absolute threshold: 3.5
  remove bias correction: true
  action:
    name: reject
# #step2: clw check
# Keep the CLW check in yaml for further improvement.
# The test case using 2020110112 global SSMIS data shows that CLW check is not activated in GSI.
#- filter: Bounds Check
#  filter variables:
#  - name: brightnessTemperature
#    channels: 1
#  test variables:
#  - name: ObsFunction/CLWRetMW_SSMIS
#    options:
#      satellite: SSMIS
#      ch19h: 12
#      ch19v: 13
#      ch22v: 14
#      ch37h: 15
#      ch37v: 16
#      ch91v: 17
#      ch91h: 18
#      varGroup: ObsValue
#  minvalue: 0.0
#  maxvalue: 0.1
#  where:
#  - variable:
#      name: GeoVaLs/water_area_fraction
#    minvalue: 0.99
#  action:
#    name: reject
#step3:
- filter: Difference Check
  filter variables:
  - name: brightnessTemperature
    channels: 1-2,12-16
  reference: brightness_temperature_2@ObsValue
  value: brightness_temperature_2@HofX
  minvalue: -1.5
  maxvalue: 1.5
  where:
  - variable:
      name: GeoVaLs/water_area_fraction
    maxvalue: 0.99
#QC_terrain: If ssmis and terrain height > 2km. do not use
- filter: Domain Check
  filter variables:
  - name: brightnessTemperature
    channels: *ssmis_f17_channels
  where:
  - variable:
      name: MetaData/height
    maxvalue: 2000.0
#Do not use over mixed surface
- filter: BlackList
  filter variables:
  - name: brightnessTemperature
    channels: 1-3,8-18
  where:
  - variable:
      name: GeoVaLs/land_area_fraction
    maxvalue: 0.99
  - variable:
      name: GeoVaLs/water_area_fraction
    maxvalue: 0.99
  - variable:
      name: GeoVaLs/ice_area_fraction
    maxvalue: 0.99
  - variable:
      name: GeoVaLs/surface_snow_area_fraction
    maxvalue: 0.99
#step4: Generate q.c. bounds and modified variances
- filter: BlackList
  filter variables:
  - name: brightnessTemperature
    channels: *ssmis_f17_channels
  action:
    name: inflate error
    inflation variable:
#Surface Jacobian check
      name: ObsFunction/ObsErrorFactorSurfJacobianRad
      channels: *ssmis_f17_channels
      options:
        channels: *ssmis_f17_channels
        sensor: *Sensor_ID
        obserr_demisf: [0.010, 0.010, 0.010, 0.010, 0.010]
        obserr_dtempf: [0.500, 0.500, 0.500, 0.500, 0.500]
#Useflag Check
- filter: Bounds Check
  filter variables:
  - name: brightnessTemperature
    channels: *ssmis_f17_channels
  test variables:
  - name: ObsFunction/ChannelUseflagCheckRad
    channels: *ssmis_f17_channels
    options:
      channels: *ssmis_f17_channels
      use_flag: [ 1, -1, -1, -1,  1 , 1,  1, -1, -1, -1,
                 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                 -1, -1, -1, 1]
  minvalue: 1.0e-12
  action:
    name: reject
