obs space:
  name: IASI METOP-C
  obsdatain:
    engine:
      type: H5File
      obsfile: '{{cycle_dir}}/iasi_metop-c.{{window_begin}}.nc4'
  obsdataout:
    engine:
      type: H5File
      obsfile: '{{cycle_dir}}/{{experiment_id}}.iasi_metop-c.{{window_begin}}.nc4'
  simulated variables: [brightnessTemperature]
  channels: &iasi_metop-c_channels {{iasi_metop-c_avail_channels}}

obs operator:
  name: CRTM
  Absorbers: [H2O,O3,CO2]
  obs options:
    Sensor_ID: &Sensor_ID iasi_metop-c
    EndianType: little_endian
    CoefficientPath: '{{crtm_coeff_dir}}'
  linear obs operator:
    Absorbers: [H2O,O3]

obs bias:
  input file: '{{cycle_dir}}/iasi_metop-c.{{background_time}}.satbias.nc4'
  variational bc:
    predictors:
    - name: constant
    - name: lapse_rate
      order: 2
      tlapse: &iasi_metop-c_tlapse '{{cycle_dir}}/iasi_metop-c.{{background_time}}.tlapse.txt'
    - name: lapse_rate
      tlapse: *iasi_metop-c_tlapse
    - name: emissivity
    - name: scan_angle
      order: 4
    - name: scan_angle
      order: 3
    - name: scan_angle
      order: 2
    - name: scan_angle
  covariance:
    minimal required obs number: 20
    variance range: [1.0e-6, 10.0]
    step size: 1.0e-4
    largest analysis variance: 10000.0
    prior:
      input file: '{{cycle_dir}}/iasi_metop-c.{{background_time}}.satbias.nc4'
      inflation:
        ratio: 1.1
        ratio for small dataset: 2.0
    output file: '{{cycle_dir}}/iasi_metop-c.{{window_begin}}.satbias.nc4'

obs prior filters:
- filter: Perform Action
  filter variables:
  - name: brightnessTemperature
    channels: *iasi_metop-c_channels
  action:
    name: assign error
    error parameter vector: [ 0.7270, 0.8100, 0.7500, 0.7900, 0.7055, 0.7400, 0.6800, 0.7200, 0.6526, 0.6500,
                            0.6650, 0.6900, 0.6394, 0.6400, 0.6528, 0.6065, 0.6246, 0.6100, 0.6423, 0.5995,
                            0.5900, 0.6069, 0.6000, 0.5965, 0.6400, 0.6200, 0.5890, 0.5865, 0.6500, 0.5861,
                            0.6100, 0.5874, 0.6800, 0.6060, 0.6800, 4.3800, 3.0500, 2.3100, 1.5600, 1.3300,
                            1.5800, 0.9300, 0.5832, 0.5587, 0.5867, 0.5800, 0.5655, 0.5522, 0.5864, 0.5475,
                            0.5854, 0.5455, 0.5811, 0.5376, 0.5452, 0.5686, 0.5329, 0.5655, 0.5302, 0.5450,
                            0.5628, 0.5900, 0.5262, 0.5590, 0.5264, 0.5442, 0.5100, 0.5513, 0.5224, 0.5523,
                            0.5188, 0.5487, 0.5245, 0.5800, 0.5437, 0.5343, 0.5364, 0.6400, 0.5338, 0.7200,
                            0.5370, 0.7500, 0.5100, 0.6500, 0.5274, 0.5290, 0.5187, 0.5228, 1.1200, 0.5222,
                            0.5109, 0.6700, 0.5133, 0.5179, 0.5070, 0.6700, 0.5091, 0.6200, 0.5093, 0.6900,
                            0.5048, 0.5024, 0.7800, 0.4970, 0.5337, 0.4865, 0.4915, 0.4835, 0.4869, 0.8700,
                            0.4824, 0.4852, 0.8400, 0.8400, 0.8400, 0.5318, 0.8000, 0.4772, 0.9800, 0.4880,
                            0.4978, 0.5157, 0.6100, 0.5213, 0.4884, 0.7900, 0.6200, 0.6600, 0.4691, 0.6500,
                            0.4809, 0.4680, 0.6200, 0.4679, 0.6913, 0.4705, 0.4785, 0.4700, 0.4773, 0.4703,
                            0.9800, 0.4697, 0.4662, 0.6500, 0.4670, 0.4883, 0.4684, 0.4684, 0.4947, 0.5393,
                            0.5024, 0.4715, 0.6210, 0.6136, 0.5316, 1.7800, 0.5099, 1.1400, 0.5390, 1.7900,
                            0.5080, 0.5723, 1.9400, 2.0100, 0.4900, 0.5647, 0.5022, 1.4700, 0.5815, 0.6782,
                            2.1300, 0.5445, 1.5200, 0.5555, 1.9600, 2.3100, 2.3300, 2.3200, 2.3100, 0.6994,
                            0.7006, 0.7060, 0.9785, 0.7023, 0.6991, 0.6946, 2.2800, 2.2600, 2.2600, 2.2600,
                            0.6608, 0.6835, 0.6822, 2.2400, 2.2600, 0.6735, 2.2800, 0.6670, 0.7732, 0.6642,
                            0.6480, 0.6629, 2.2900, 2.2900, 0.6799, 0.6230, 2.3200, 0.6030, 0.6224, 2.3200,
                            0.6187, 2.3100, 2.3100, 2.2800, 2.2900, 2.2800, 2.2600, 1.9660, 2.2700, 2.2600,
                            2.2500, 2.2700, 2.2400, 2.2100, 2.2400, 2.1700, 2.1800, 2.1700, 2.2100, 1.4000,
                            2.1600, 2.2000, 2.1300, 2.1200, 2.1300, 2.1000, 2.1200, 2.1100, 2.0900, 2.0900,
                            2.0800, 2.0900, 2.0400, 2.0400, 1.9660, 2.0100, 2.0500, 2.0300, 2.0600, 1.9800,
                            1.9500, 1.9400, 1.9100, 1.8570, 1.7600, 1.7480, 1.8300, 2.0400, 1.7480, 1.9900,
                            2.0750, 2.0700, 2.0200, 2.0400, 2.1000, 1.9660, 2.1800, 2.2100, 2.2400, 2.2300,
                            2.2300, 1.9800, 2.2000, 2.1800, 2.1800, 2.2100, 2.2300, 2.2400, 2.2400, 2.2500,
                            1.8000, 2.2400, 1.7300, 1.7300, 2.2700, 1.6700, 2.2100, 1.7200, 2.2300, 2.2300,
                            2.2300, 2.2400, 2.2300, 2.1200, 2.1700, 1.7400, 2.0200, 1.8800, 1.6700, 1.7300,
                            1.8300, 1.8200, 1.7300, 1.8300, 2.1900, 1.8400, 1.8900, 1.6000, 1.7100, 1.8600,
                            1.8500, 1.8400, 1.8700, 1.9100, 1.5200, 1.9500, 1.8700, 1.8900, 1.9100, 1.9100,
                            1.9300, 1.9000, 1.9100, 1.9000, 1.8900, 1.8900, 1.9100, 1.9000, 1.9100, 1.9100,
                            1.9100, 1.9300, 1.9400, 1.9100, 1.9200, 1.7700, 1.9100, 1.9500, 1.1900, 1.9600,
                            1.9800, 1.9400, 1.5500, 1.9100, 1.9200, 1.9200, 1.9700, 1.9300, 1.9900, 1.8600,
                            1.1200, 1.9300, 1.9200, 1.9500, 1.8500, 1.8400, 1.9100, 1.1200, 1.8200, 1.8200,
                            1.9500, 1.2400, 1.9400, 1.9600, 1.2100, 1.8300, 1.9600, 1.3600, 1.9600, 1.8200,
                            1.9200, 1.6800, 1.9300, 1.2300, 1.9600, 1.9300, 1.8600, 1.4100, 1.1600, 1.6000,
                            1.2500, 1.2000, 1.6500, 1.6600, 1.8700, 1.9400, 1.9600, 1.9100, 1.2500, 1.9300,
                            1.9100, 1.7000, 0.9900, 1.8100, 1.9200, 1.9500, 1.5000, 1.4700, 1.1500, 1.5800,
                            1.1800, 1.8200, 1.1300, 1.8300, 1.9100, 1.2600, 1.2700, 1.9100, 1.4500, 1.6000,
                            1.2900, 1.9400, 1.9400, 1.2300, 1.9500, 1.2100, 1.9400, 1.8600, 1.9000, 1.3300,
                            1.7500, 2.0200, 1.9800, 2.0300, 1.8300, 1.5000, 2.0400, 2.0200, 1.9000, 2.0000,
                            2.0200, 1.9500, 1.9300, 1.9500, 1.9500, 1.9900, 2.0000, 1.9400, 1.9600, 1.8600,
                            1.9200, 1.8800, 1.8600, 1.8400, 1.8700, 1.7700, 1.8900, 1.8900, 1.8800, 1.9400,
                            1.8200, 1.7900, 1.8600, 2.0600, 2.3300, 1.8800, 1.8600, 1.8100, 1.8000, 1.8000,
                            1.8600, 1.9000, 2.0000, 2.0600, 2.1000, 2.2000, 2.0000, 2.1600, 1.9800, 1.8000,
                            1.8000, 1.8500, 1.7500, 2.0400, 2.1900, 2.1400, 2.1900, 1.8600, 2.1000, 2.1100,
                            2.1800, 2.0300, 2.2800, 2.1900, 2.2600, 2.2600, 2.2100, 2.2100, 2.2600, 2.3300,
                            2.2700, 2.2100, 2.1200, 2.2300, 2.2600, 2.2500, 1.8800, 2.2600, 2.2400, 2.3600,
                            2.2900, 2.3500, 2.3000, 2.2700, 2.0800, 2.0500, 2.2700, 2.2800, 2.2700, 2.2800,
                            1.9700, 2.2500, 2.2500, 2.2500, 2.3100, 2.2800, 2.2700, 2.1300, 2.2400, 2.2800,
                            2.2800, 2.4100, 2.3400, 9.3200, 2.2800, 2.3800, 2.2700, 2.2700, 2.3900, 2.1100,
                            2.0900, 2.1000, 2.0600, 2.1200, 2.0800, 2.0000, 1.9300, 2.0200, 2.5500, 1.5400,
                            1.6400, 1.5100, 1.5500, 2.8200, 2.9200, 2.5500, 2.3700, 1.8500, 1.6000, 1.7200,
                            1.7400, 1.7900, 1.9000, 1.9400, 2.0000, 2.0400, 2.0800, 2.1200, 2.1300, 2.1600,
                            2.1800, 2.1800, 2.2000, 2.2000, 2.4100, 2.3900, 2.3800, 2.4000, 2.4200, 2.4100,
                            2.4300, 2.4500, 2.4300, 2.4500, 2.4300, 2.4000, 2.4400, 2.4000, 2.4200, 2.4300,
                            2.4500, 2.4500, 2.4500, 2.4600, 2.4500, 2.4500, 2.4300, 2.5100, 2.4800, 2.4800,
                            2.5300, 2.4600, 2.4900, 2.5000, 2.5000, 2.5000, 2.5200, 2.5200, 2.5400, 2.5000,
                            2.4800, 2.5000, 2.5500, 2.5000, 2.4800, 2.5000, 2.5000, 2.5200, 2.5200, 2.4800,
                            2.5000, 2.5000, 2.5200, 2.4600, 2.5300, 9.0000 ]
# assign ObsError <---- ObsErrorData (Assigned in Yaml)
- filter: Variable Assignment
  assignments:
  - name: ObsError/brightnessTemperature
    channels: *iasi_metop-c_channels
    type: float
    function:
      name: ObsFunction/Arithmetic
      options:
        variables:
        - name: ObsErrorData/brightnessTemperature
          channels: *iasi_metop-c_channels
obs post filters:
# Wavenumber Check
- filter: BlackList
  filter variables:
  - name: brightnessTemperature
    channels: 7024, 7027, 7029, 7032, 7038, 7043, 7046, 7049, 7069, 7072,
              7076, 7081, 7084, 7089, 7099, 7209, 7222, 7231, 7235, 7247,
              7267, 7269, 7284, 7389, 7419, 7423, 7424, 7426, 7428, 7431,
              7436, 7444, 7475, 7549, 7584, 7665, 7666, 7831, 7836, 7853,
              7865, 7885, 7888, 7912, 7950, 7972, 7980, 7995, 8007, 8015,
              8055, 8078
  where:
  - variable:
      name: MetaData/solarZenithAngle
    maxvalue: 88.9999
  - variable:
      name: GeoVaLs/water_area_fraction
    minvalue: 1.0e-12
  action:
    name: reject
- filter: BlackList
  filter variables:
  - name: brightnessTemperature
    channels: *iasi_metop-c_channels
  action:
    name: inflate error
    inflation variable:
      name: ObsFunction/ObsErrorFactorWavenumIR
      channels: *iasi_metop-c_channels
      options:
        channels: *iasi_metop-c_channels
# Observation Range Sanity Check
- filter: Bounds Check
  filter variables:
  - name: brightnessTemperature
    channels: *iasi_metop-c_channels
  minvalue: 50.00001
  maxvalue: 549.99999
  action:
    name: reject
# Topography Check
- filter: BlackList
  filter variables:
  - name: brightnessTemperature
    channels: *iasi_metop-c_channels
  action:
    name: inflate error
    inflation variable:
      name: ObsFunction/ObsErrorFactorTopoRad
      channels: *iasi_metop-c_channels
      options:
        channels: *iasi_metop-c_channels
        sensor: *Sensor_ID
# Transmittance Top Check
- filter: BlackList
  filter variables:
  - name: brightnessTemperature
    channels: *iasi_metop-c_channels
  action:
    name: inflate error
    inflation variable:
      name: ObsFunction/ObsErrorFactorTransmitTopRad
      channels: *iasi_metop-c_channels
      options:
        channels: *iasi_metop-c_channels
# Cloud Detection Check
- filter: Bounds Check
  filter variables:
  - name: brightnessTemperature
    channels: *iasi_metop-c_channels
  test variables:
  - name: ObsFunction/CloudDetectMinResidualIR
    channels: *iasi_metop-c_channels
    options:
      channels: *iasi_metop-c_channels
      use_flag: &useflag_iasi_metop-c {{iasi_metop-c_active_channels}}
      use_flag_clddet: &clddet_iasi_metop-c [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 31, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 31,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 31, 1, 1, 1, 1, 1,
                         1, 1, 1, 31, 1, 31, 1, 1, 31, 1,
                        31, 1, 1, 1, 1, 31, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                         1, 1, 1, 1, 1, 1]
      obserr_dtempf: [0.50,2.00,4.00,2.00,4.00]
  maxvalue: 1.0e-12
  action:
    name: reject
# NSST Retrieval Check
- filter: Bounds Check
  filter variables:
  - name: brightnessTemperature
    channels: *iasi_metop-c_channels
  test variables:
  - name: ObsFunction/NearSSTRetCheckIR
    channels: *iasi_metop-c_channels
    options:
      channels: *iasi_metop-c_channels
      use_flag: *useflag_iasi_metop-c
      obserr_demisf: [0.01,0.02,0.03,0.02,0.03]
      obserr_dtempf: [0.50,2.00,4.00,2.00,4.00]
  maxvalue: 1.0e-12
  action:
    name: reject
# Surface Jacobians Check
- filter: BlackList
  filter variables:
  - name: brightnessTemperature
    channels: *iasi_metop-c_channels
  action:
    name: inflate error
    inflation variable:
      name: ObsFunction/ObsErrorFactorSurfJacobianRad
      channels: *iasi_metop-c_channels
      options:
        channels: *iasi_metop-c_channels
        sensor: *Sensor_ID
        obserr_demisf: [0.01, 0.02, 0.03, 0.02, 0.03]
        obserr_dtempf: [0.50, 2.00, 4.00, 2.00, 4.00]
# Gross check
- filter: Background Check
  filter variables:
  - name: brightnessTemperature
    channels: *iasi_metop-c_channels
  function absolute threshold:
  - name: ObsFunction/ObsErrorBoundIR
    channels: *iasi_metop-c_channels
    options:
      channels: *iasi_metop-c_channels
      obserr_bound_latitude:
        name: ObsFunction/ObsErrorFactorLatRad
        options:
          latitude_parameters: [25.0, 0.5, 0.04, 1.0]
      obserr_bound_transmittop:
        name: ObsFunction/ObsErrorFactorTransmitTopRad
        channels: *iasi_metop-c_channels
        options:
          channels: *iasi_metop-c_channels
      obserr_bound_max: [ 3.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00,
                          2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00,
                          2.00, 2.00, 4.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00,
                          2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 4.00, 4.00,
                          3.50, 2.50, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00,
                          2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00,
                          2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00,
                          2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 0.75, 2.00,
                          0.75, 2.00, 2.00, 2.00, 0.75, 0.75, 0.75, 0.75, 2.00, 0.75,
                          0.75, 2.00, 0.75, 0.75, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00,
                          2.00, 2.00, 2.00, 2.00, 2.50, 2.00, 2.50, 2.50, 3.00, 2.50,
                          2.50, 2.50, 2.50, 3.50, 2.50, 2.50, 3.00, 3.50, 3.00, 4.00,
                          4.00, 0.75, 4.00, 4.00, 4.00, 4.50, 4.50, 4.50, 4.50, 4.50,
                          4.00, 4.50, 4.00, 4.00, 4.50, 2.50, 3.00, 2.50, 3.00, 2.50,
                          3.00, 2.00, 2.50, 2.50, 3.00, 3.00, 2.50, 3.00, 3.00, 3.00,
                          2.50, 2.50, 4.00, 4.50, 4.50, 5.00, 4.00, 4.00, 5.00, 5.00,
                          5.00, 5.00, 5.50, 5.50, 4.00, 5.00, 4.00, 4.50, 5.50, 5.50,
                          6.00, 4.50, 4.50, 4.00, 5.00, 5.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 1.25, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 1.25,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 1.50, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 1.40, 6.00, 1.40, 6.00, 6.00, 1.40, 6.00,
                          1.50, 6.00, 6.00, 6.00, 6.00, 1.50, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 5.50, 4.50, 6.00,
                          5.00, 5.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 5.00, 6.00,
                          6.00, 6.00, 4.00, 6.00, 6.00, 6.00, 6.00, 4.50, 6.00, 6.00,
                          4.50, 6.00, 6.00, 6.00, 6.00, 6.00, 5.00, 6.00, 6.00, 6.00,
                          5.00, 6.00, 6.00, 5.00, 6.00, 5.00, 6.00, 6.00, 6.00, 5.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
                          6.00, 6.00, 6.00, 6.00, 6.00, 6.00 ]
  action:
    name: reject
# Surface Type Check
- filter: Bounds Check
  filter variables:
  - name: brightnessTemperature
    channels: *iasi_metop-c_channels
  test variables:
  - name: ObsFunction/SurfTypeCheckRad
    channels: *iasi_metop-c_channels
    options:
      channels: *iasi_metop-c_channels
      use_flag: *useflag_iasi_metop-c
      use_flag_clddet: *clddet_iasi_metop-c
  maxvalue: 1.0e-12
  defer to post: true
  action:
    name: reject
# Useflag Check
- filter: Bounds Check
  filter variables:
  - name: brightnessTemperature
    channels: *iasi_metop-c_channels
  test variables:
  - name: ObsFunction/ChannelUseflagCheckRad
    channels: *iasi_metop-c_channels
    options:
      channels: *iasi_metop-c_channels
      use_flag: *useflag_iasi_metop-c
  minvalue: 1.0e-12
  action:
    name: reject
