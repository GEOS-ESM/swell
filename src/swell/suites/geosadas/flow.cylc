# (C) Copyright 2021- United States Government as represented by the Administrator of the
# National Aeronautics and Space Administration. All Rights Reserved.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.

# --------------------------------------------------------------------------------------------------

# Cylc suite for executing JEDI-based non-cycling variational data assimilation

# --------------------------------------------------------------------------------------------------

[scheduler]
    UTC mode = True
    allow implicit tasks = False

# --------------------------------------------------------------------------------------------------

[scheduling]

    initial cycle point = 2020-12-15T00:00:00Z
    final cycle point = 2020-12-15T00:00:00Z

    [[graph]]
        R1 = """
            # Clone JEDI source code
            CloneJedi

            # Build JEDI source code by linking
            BuildJediByLinking?

            # Stage JEDI static files
            CloneJedi => StageJedi

            # Clone geos ana for generating observing system records
            CloneGeosMksi
        """

        T00 = """
            # Generate satellite channel records
            CloneGeosMksi[^] => GenerateObservingSystemRecords

            # Get and convert bias correction coefficients
            GetGsiBc => GsiBcToIoda

            # Get and convert ncdiags
            GetGsiNcdiag => GsiNcdiagToIoda

            # Get background
            GetGeosAdasBackground

            # Run Jedi variational executable
            GenerateObservingSystemRecords => RunJediVariationalExecutable
            BuildJediByLinking[^]  => RunJediVariationalExecutable
            StageJedi[^] => RunJediVariationalExecutable
            GsiBcToIoda => RunJediVariationalExecutable
            GsiNcdiagToIoda => RunJediVariationalExecutable
            GetGeosAdasBackground => RunJediVariationalExecutable

            # Clean cycle
            RunJediVariationalExecutable => CleanCycle
        """

# --------------------------------------------------------------------------------------------------

[runtime]

    # Task defaults
    # -------------
    [[root]]
        pre-script = "source $CYLC_SUITE_DEF_PATH/modules"

        [[[environment]]]
            datetime = $CYLC_TASK_CYCLE_POINT
            config   = $CYLC_SUITE_DEF_PATH/experiment.yaml

    # Tasks
    # -----
    [[CloneGeosMksi]]
        script = "swell task CloneGeosMksi $config"

    [[GenerateObservingSystemRecords]]
        script = "swell task GenerateObservingSystemRecords $config -d $datetime -m geos_atmosphere"

    [[CloneJedi]]
        script = "swell task CloneJedi $config"

    [[BuildJediByLinking]]
        script = "swell task BuildJediByLinking $config"

    [[StageJedi]]
        script = "swell task StageJedi $config -m geos_atmosphere"

    [[ GetGsiBc ]]
        script = "swell task GetGsiBc $config -d $datetime -m geos_atmosphere"

    [[ GsiBcToIoda ]]
        script = "swell task GsiBcToIoda $config -d $datetime -m geos_atmosphere"

    [[ GetGsiNcdiag ]]
        script = "swell task GetGsiNcdiag $config -d $datetime -m geos_atmosphere"

    [[ GsiNcdiagToIoda ]]
        script = "swell task GsiNcdiagToIoda $config -d $datetime -m geos_atmosphere"

    [[ GetGeosAdasBackground ]]
        script = "swell task GetGeosAdasBackground $config -d $datetime -m geos_atmosphere"

    [[RunJediVariationalExecutable]]
        script = "swell task RunJediVariationalExecutable $config -d $datetime -m geos_atmosphere"
        platform = {{platform}}
        execution time limit = {{scheduling["RunJediVariationalExecutable"]["execution_time_limit"]}}
        [[[directives]]]
        {% for key, value in scheduling["RunJediVariationalExecutable"]["directives"].items() %}
            --{{key}} = {{value}}
        {% endfor %}

    [[CleanCycle]]
        script = "swell task CleanCycle $config -d $datetime -m geos_atmosphere"

# --------------------------------------------------------------------------------------------------
